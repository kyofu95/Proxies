version: '3.9'

services:
  db:
    image: postgres:15.3
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - 5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      interval: 1s
      timeout: 2s
      retries: 10
    networks:
      services-network:
        aliases:
          - db

  web:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: sh -c "
            flask --app proxies.main:create_app db upgrade
            && gunicorn 'proxies.main:create_app()' -w 1 -b 0.0.0.0:5050 --log-level=error"
    volumes:
      - ./proxies/:/app/proxies/
    expose:
      - 5050
    depends_on:
      db:
        condition: service_healthy
    environment:
      ENVIRONMENT: ${ENVIRONMENT}
      GUNICORN: 1
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_HOST: db
      SECRET_KEY: ${SECRET_KEY}
    networks:
      services-network:
        aliases:
          - web

  nginx:
    build: ./nginx
    ports:
      - 80:80
    depends_on:
      - web
    networks:
      services-network:

volumes:
  postgres_data:

networks:
  services-network:
    name: services-network
    driver: bridge